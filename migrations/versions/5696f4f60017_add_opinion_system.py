"""add_opinion_system

Revision ID: 5696f4f60017
Revises: 406d08627044
Create Date: 2024-11-18 08:53:06.505914

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5696f4f60017'
down_revision: Union[str, None] = '406d08627044'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('communication_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('requires_response', sa.Boolean(), nullable=True),
    sa.Column('default_deadline_hours', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('opinion_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference_number', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('requester_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('current_status_id', sa.Integer(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint("priority IN ('Low', 'Medium', 'High', 'Urgent')", name='valid_priority'),
    sa.ForeignKeyConstraint(['current_status_id'], ['workflow_status.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference_number')
    )
    op.create_index('idx_opinion_requests_department', 'opinion_requests', ['department_id'], unique=False)
    op.create_index('idx_opinion_requests_status', 'opinion_requests', ['current_status_id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interdepartmental_communications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('communication_type_id', sa.Integer(), nullable=True),
    sa.Column('from_department_id', sa.Integer(), nullable=True),
    sa.Column('to_department_id', sa.Integer(), nullable=True),
    sa.Column('from_user_id', sa.Integer(), nullable=True),
    sa.Column('to_user_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('parent_communication_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['communication_type_id'], ['communication_types.id'], ),
    sa.ForeignKeyConstraint(['from_department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['parent_communication_id'], ['interdepartmental_communications.id'], ),
    sa.ForeignKeyConstraint(['to_department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('opinions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('recommendation', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('review_comments', sa.Text(), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint("status IN ('draft', 'submitted', 'reviewed', 'approved', 'rejected')", name='valid_status'),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['expert_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_opinions_request', 'opinions', ['opinion_request_id'], unique=False)
    op.create_table('request_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('assigned_by', sa.Integer(), nullable=True),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['expert_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['workflow_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('action_by', sa.Integer(), nullable=True),
    sa.Column('from_status_id', sa.Integer(), nullable=True),
    sa.Column('to_status_id', sa.Integer(), nullable=True),
    sa.Column('action_details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['action_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['from_status_id'], ['workflow_status.id'], ),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['to_status_id'], ['workflow_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_workflow_history_request', 'workflow_history', ['opinion_request_id'], unique=False)
    op.drop_index('ix_cmetadata_gin', table_name='langchain_pg_embedding', postgresql_using='gin')
    op.drop_index('ix_langchain_pg_embedding_id', table_name='langchain_pg_embedding')
    op.drop_table('langchain_pg_embedding')
    op.drop_table('langchain_pg_collection')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('langchain_pg_collection',
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('uuid', name='langchain_pg_collection_pkey'),
    sa.UniqueConstraint('name', name='langchain_pg_collection_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('langchain_pg_embedding',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('collection_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('document', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cmetadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['langchain_pg_collection.uuid'], name='langchain_pg_embedding_collection_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='langchain_pg_embedding_pkey')
    )
    op.create_index('ix_langchain_pg_embedding_id', 'langchain_pg_embedding', ['id'], unique=True)
    op.create_index('ix_cmetadata_gin', 'langchain_pg_embedding', ['cmetadata'], unique=False, postgresql_using='gin')
    op.drop_index('idx_workflow_history_request', table_name='workflow_history')
    op.drop_table('workflow_history')
    op.drop_table('request_assignments')
    op.drop_index('idx_opinions_request', table_name='opinions')
    op.drop_table('opinions')
    op.drop_table('interdepartmental_communications')
    op.drop_table('documents')
    op.drop_index('idx_opinion_requests_status', table_name='opinion_requests')
    op.drop_index('idx_opinion_requests_department', table_name='opinion_requests')
    op.drop_table('opinion_requests')
    op.drop_table('workflow_status')
    op.drop_table('communication_types')
    # ### end Alembic commands ###
