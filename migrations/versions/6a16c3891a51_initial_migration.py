"""Initial_migration

Revision ID: 6a16c3891a51
Revises: 
Create Date: 2024-11-19 00:30:51.193374

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6a16c3891a51'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('communication_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('requires_response', sa.Boolean(), nullable=True),
    sa.Column('default_deadline_hours', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('department',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_department_code'), 'department', ['code'], unique=True)
    op.create_index(op.f('ix_department_name'), 'department', ['name'], unique=True)
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('workflow_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE')
    )
    op.create_table('subcategories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_subcategory_category', 'subcategories', ['category_id', 'name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('chat_messages',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_bot', sa.Boolean(), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('opinion_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference_number', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('requester_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('current_status_id', sa.Integer(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('sub_category_id', sa.Integer(), nullable=True),
    sa.Column('request_statement', sa.Text(), nullable=True),
    sa.Column('challenges_opportunities', sa.Text(), nullable=True),
    sa.Column('subject_content', sa.Text(), nullable=True),
    sa.Column('alternative_options', sa.Text(), nullable=True),
    sa.Column('expected_impact', sa.Text(), nullable=True),
    sa.Column('potential_risks', sa.Text(), nullable=True),
    sa.Column('studies_statistics', sa.Text(), nullable=True),
    sa.Column('legal_financial_opinions', sa.Text(), nullable=True),
    sa.Column('stakeholder_feedback', sa.Text(), nullable=True),
    sa.Column('work_plan', sa.Text(), nullable=True),
    sa.Column('decision_draft', sa.Text(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.CheckConstraint("priority IN ('urgent', 'high', 'medium', 'low')", name='valid_priority'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['current_status_id'], ['workflow_status.id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sub_category_id'], ['subcategories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference_number')
    )
    op.create_index('idx_opinion_requests_category_id', 'opinion_requests', ['category_id'], unique=False)
    op.create_index('idx_opinion_requests_department', 'opinion_requests', ['department_id'], unique=False)
    op.create_index('idx_opinion_requests_status', 'opinion_requests', ['current_status_id'], unique=False)
    op.create_index('idx_opinion_requests_subcategory_id', 'opinion_requests', ['sub_category_id'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE')
    )
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('file_type', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_url', sa.String(length=512), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_documents_request', 'documents', ['opinion_request_id'], unique=False)
    op.create_table('interdepartmental_communications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('communication_type_id', sa.Integer(), nullable=True),
    sa.Column('from_department_id', sa.Integer(), nullable=True),
    sa.Column('to_department_id', sa.Integer(), nullable=True),
    sa.Column('from_user_id', sa.Integer(), nullable=True),
    sa.Column('to_user_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('parent_communication_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint("priority IN ('urgent', 'high', 'medium', 'low')", name='valid_comm_priority'),
    sa.CheckConstraint("status IN ('pending', 'in_progress', 'completed', 'cancelled')", name='valid_comm_status'),
    sa.CheckConstraint('to_department_id != from_department_id', name='different_departments'),
    sa.ForeignKeyConstraint(['communication_type_id'], ['communication_types.id'], ),
    sa.ForeignKeyConstraint(['from_department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['parent_communication_id'], ['interdepartmental_communications.id'], ),
    sa.ForeignKeyConstraint(['to_department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_communications_request', 'interdepartmental_communications', ['opinion_request_id'], unique=False)
    op.create_table('opinions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('recommendation', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('review_comments', sa.Text(), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint("status IN ('draft', 'submitted', 'reviewed', 'approved', 'rejected', 'unassigned')", name='valid_status'),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['expert_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_opinions_request', 'opinions', ['opinion_request_id'], unique=False)
    op.create_table('remarks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_remarks_request', 'remarks', ['opinion_request_id'], unique=False)
    op.create_table('request_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('assigned_by', sa.Integer(), nullable=True),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['expert_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['workflow_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_assignments_request', 'request_assignments', ['opinion_request_id'], unique=False)
    op.create_index('uix_request_expert', 'request_assignments', ['opinion_request_id', 'expert_id'], unique=True)
    op.create_table('workflow_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opinion_request_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('action_by', sa.Integer(), nullable=True),
    sa.Column('from_status_id', sa.Integer(), nullable=True),
    sa.Column('to_status_id', sa.Integer(), nullable=True),
    sa.Column('action_details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['action_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['from_status_id'], ['workflow_status.id'], ),
    sa.ForeignKeyConstraint(['opinion_request_id'], ['opinion_requests.id'], ),
    sa.ForeignKeyConstraint(['to_status_id'], ['workflow_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_workflow_history_request', 'workflow_history', ['opinion_request_id'], unique=False)
    op.drop_index('langchain_pg_embedding_embedding_idx', table_name='langchain_pg_embedding', postgresql_with={'lists': '100'}, postgresql_using='ivfflat')
    op.drop_table('langchain_pg_embedding')
    op.drop_table('langchain_pg_collection')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('langchain_pg_collection',
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('cmetadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('name', name='langchain_pg_collection_pkey')
    )
    op.create_table('langchain_pg_embedding',
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cmetadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('document', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('uuid', name='langchain_pg_embedding_pkey')
    )
    op.create_index('langchain_pg_embedding_embedding_idx', 'langchain_pg_embedding', ['embedding'], unique=False, postgresql_with={'lists': '100'}, postgresql_using='ivfflat')
    op.drop_index('idx_workflow_history_request', table_name='workflow_history')
    op.drop_table('workflow_history')
    op.drop_index('uix_request_expert', table_name='request_assignments')
    op.drop_index('idx_assignments_request', table_name='request_assignments')
    op.drop_table('request_assignments')
    op.drop_index('idx_remarks_request', table_name='remarks')
    op.drop_table('remarks')
    op.drop_index('idx_opinions_request', table_name='opinions')
    op.drop_table('opinions')
    op.drop_index('idx_communications_request', table_name='interdepartmental_communications')
    op.drop_table('interdepartmental_communications')
    op.drop_index('idx_documents_request', table_name='documents')
    op.drop_table('documents')
    op.drop_table('user_roles')
    op.drop_index('idx_opinion_requests_subcategory_id', table_name='opinion_requests')
    op.drop_index('idx_opinion_requests_status', table_name='opinion_requests')
    op.drop_index('idx_opinion_requests_department', table_name='opinion_requests')
    op.drop_index('idx_opinion_requests_category_id', table_name='opinion_requests')
    op.drop_table('opinion_requests')
    op.drop_table('chat_messages')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index('idx_subcategory_category', table_name='subcategories')
    op.drop_table('subcategories')
    op.drop_table('role_permissions')
    op.drop_table('workflow_status')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_department_name'), table_name='department')
    op.drop_index(op.f('ix_department_code'), table_name='department')
    op.drop_table('department')
    op.drop_table('communication_types')
    op.drop_table('categories')
    # ### end Alembic commands ###
